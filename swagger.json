{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Restaurant API",
    "description": "Restaurant orders, inventory, users, and administrator management"
  },
  "servers": [
    {
      "url": "https://restaurantapi-m771.onrender.com/",
      "description": "Server for production"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local server for testing"
    }
  ],
  "paths": {
    "/admin/": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get All Admin (lvl 1) or Manager (lvl 2) records.",
        "description": "Get All Admin (lvl 1) or Manager (lvl 2) records.",
        "parameters": [
          {
            "name": "op_lvl",
            "description": "The Operator level to filter by.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Admin record was successfully created."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: You must be logged in with an Admin account."
          },
          "403": {
            "description": "Forbidden: You must be logged in with an Admin account with the appropriate privileges."
          },
          "500": {
            "description": "Internal Server Error: Something happened on the server side while creating the Admin profile."
          }
        }
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Create a new Admin (lvl 1 or 2) record.",
        "description": "Create a new Admin (lvl 1 or 2) record.",
        "responses": {
          "200": {
            "description": "OK: Admin record was successfully created."
          },
          "401": {
            "description": "Unauthorized: You must be logged in with an Admin account."
          },
          "403": {
            "description": "Forbidden: You must be logged in with an Admin account with the appropriate privileges."
          },
          "422": {
            "description": "Unprocessable Entity: Data is not valid."
          },
          "500": {
            "description": "Internal Server Error: Something happened on the server side while creating the Admin profile."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemaAdminRequired"
              }
            }
          }
        }
      }
    },
    "/admin/{id}": {
      "put": {
        "tags": ["Admin"],
        "summary": "Update Admin/Manager record, ref'd by _id, with optional fields.",
        "description": "Update Admin/Manager record, ref'd by _id, with optional fields.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Admin record was successfully created."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: You must be logged in with an Admin account."
          },
          "403": {
            "description": "Forbidden: You must be logged in with an Admin account with the appropriate privileges."
          },
          "422": {
            "description": "Unprocessable Entity: Data is not valid."
          },
          "500": {
            "description": "Internal Server Error: Something happened on the server side while creating the Admin profile."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemaAdminOptional"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "Delete Admin/Manager record, ref'd by _id, with optional fields.",
        "description": "Delete Admin/Manager record, ref'd by _id, with optional fields.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Admin record was successfully created."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: You must be logged in with an Admin account."
          },
          "403": {
            "description": "Forbidden: You must be logged in with an Admin account with the appropriate privileges."
          },
          "500": {
            "description": "Internal Server Error: Something happened on the server side while creating the Admin profile."
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": ["User"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuthUser": ["read"]
          }
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["User"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "example": "any"
                  },
                  "fname": {
                    "example": "any"
                  },
                  "lname": {
                    "example": "any"
                  },
                  "profilePicURI": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "creationDate": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/order/": {
      "get": {
        "tags": ["Orders"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": ["Orders"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["Orders"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/order/user/{id}": {
      "get": {
        "tags": ["Orders"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/inventory/": {
      "get": {
        "tags": ["Inventory"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Inventory"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/inventory/{id}": {
      "get": {
        "tags": ["Inventory"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["Inventory"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Inventory"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuthAdmin": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/auth/admin/google/callback",
            "scopes": {
              "read": "Grants GET requests",
              "write": "Grants POST and PUT requests",
              "delete": "Grants DELETE requests"
            }
          }
        }
      },
      "OAuthUser": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/auth/user/google/callback",
            "scopes": {
              "read": "Grants GET requests",
              "write": "Grants POST and PUT requests",
              "delete": "Grants DELETE requests"
            }
          }
        }
      }
    },
    "schemas": {
      "schemaAdminRequired": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "example": ""
          },
          "fname": {
            "type": "string",
            "example": ""
          },
          "lname": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": ""
          },
          "op_lvl": {
            "type": "string",
            "example": ""
          },
          "profilePicURI": {
            "type": "string",
            "example": ""
          }
        },
        "required": ["displayName", "fname", "email", "op_lvl"]
      },
      "schemaAdminOptional": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "example": ""
          },
          "fname": {
            "type": "string",
            "example": ""
          },
          "lname": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": ""
          },
          "op_lvl": {
            "type": "string",
            "example": ""
          },
          "profilePicURI": {
            "type": "string",
            "example": ""
          }
        }
      },
      "schemaUserOptional": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "example": ""
          },
          "fname": {
            "type": "string",
            "example": ""
          },
          "lname": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": ""
          },
          "profilePicURI": {
            "type": "string",
            "example": ""
          }
        }
      },
      "schemaOrderOptional": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "example": ""
          },
          "requests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemName": {
                  "type": "string",
                  "example": ""
                },
                "amount": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        }
      },
      "schemaInventoryOptional": {
        "type": "object",
        "properties": {
          "price": {
            "type": "string",
            "example": ""
          },
          "stock": {
            "type": "string",
            "example": ""
          },
          "itemDescription": {
            "type": "string",
            "example": ""
          }
        }
      }
    }
  }
}
